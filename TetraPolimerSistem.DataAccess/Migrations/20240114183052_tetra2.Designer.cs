// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TetraPolimerSistem.DataAccess.Concrete.EntityFrameworkCore.Context;

#nullable disable

namespace TetraPolimerSistem.DataAccess.Migrations
{
    [DbContext(typeof(TetraPolimerSistemContext))]
    [Migration("20240114183052_tetra2")]
    partial class tetra2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TetraPolimerSistem.Entities.Concrete.AppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("appRole");
                });

            modelBuilder.Entity("TetraPolimerSistem.Entities.Concrete.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("appUser");
                });

            modelBuilder.Entity("TetraPolimerSistem.Entities.Concrete.DisTicaret", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BeyannameNumarasi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DosyaNumarasi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ETA")
                        .HasColumnType("datetime2");

                    b.Property<string>("FaturaNumarasi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GirisYapanKullanici")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IhracatFirma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IthalatFirma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KonsimentoNumarasi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KonteynirNumarasi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaliyetId")
                        .HasColumnType("int");

                    b.Property<string>("OdemeDurumu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OdemeSekli")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SatilabilirKisim")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("SiparisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("TeslimSekli")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeslimYeri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeslimatYeri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrunAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UrunTonaj")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("disTicaretler");
                });

            modelBuilder.Entity("TetraPolimerSistem.Entities.Concrete.DisTicaretMaliyet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BirimFiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DamgaVergisi")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Demuraj")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Diger")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DisTicaretId")
                        .HasColumnType("int");

                    b.Property<decimal>("DovizMasraf")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GumrukKomisyon")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GumrukOran")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GumrukVergisi")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("KarliBirimFiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Kur")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LimanMasraf")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LokalMasraf")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MaliyetliBirimFiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Nakliye")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OrdinoBedel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TLMasraf")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ToplamDovizMaliyet")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ToplamTLMaliyet")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UrunBedelDoviz")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UrunTonaj")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DisTicaretId")
                        .IsUnique();

                    b.ToTable("disTicaretMaliyetler");
                });

            modelBuilder.Entity("TetraPolimerSistem.Entities.Concrete.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("BirimFiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DovizCinsi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("KDV")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Kur")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MaliyetDoviz")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MaliyetTL")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NakliyeTutar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProformaNumara")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SevkDurumu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SevkTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("SevkiyatDetayId")
                        .HasColumnType("int");

                    b.Property<string>("SiparisAlanFirma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SiparisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("SiparisVerenFirma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ToplamDovizMaliyet")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ToplamTLMaliyet")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UrunAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UrunTonaj")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("SevkiyatDetayId");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("TetraPolimerSistem.Entities.Concrete.SevkiyatDetay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plaka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sofor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TCKN")
                        .HasColumnType("int");

                    b.Property<string>("TelefonNumara")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("sevkiyatDetaylar");
                });

            modelBuilder.Entity("TetraPolimerSistem.Entities.Concrete.DisTicaretMaliyet", b =>
                {
                    b.HasOne("TetraPolimerSistem.Entities.Concrete.DisTicaret", "disTicaret")
                        .WithOne("disTicaretMaliyet")
                        .HasForeignKey("TetraPolimerSistem.Entities.Concrete.DisTicaretMaliyet", "DisTicaretId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("disTicaret");
                });

            modelBuilder.Entity("TetraPolimerSistem.Entities.Concrete.Order", b =>
                {
                    b.HasOne("TetraPolimerSistem.Entities.Concrete.SevkiyatDetay", "SevkiyatDetay")
                        .WithMany("Order")
                        .HasForeignKey("SevkiyatDetayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SevkiyatDetay");
                });

            modelBuilder.Entity("TetraPolimerSistem.Entities.Concrete.DisTicaret", b =>
                {
                    b.Navigation("disTicaretMaliyet")
                        .IsRequired();
                });

            modelBuilder.Entity("TetraPolimerSistem.Entities.Concrete.SevkiyatDetay", b =>
                {
                    b.Navigation("Order");
                });
#pragma warning restore 612, 618
        }
    }
}
